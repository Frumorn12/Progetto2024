/**-----------------------------------------------------------------------------------------
* Copyright © 2023 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, NgZone, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';
import { ChangeDetectorRef } from '@angular/core';
import { PopupService } from '@progress/kendo-angular-popup';
import { ContextMenuService } from '../context-menu/context-menu.service';
import { MenuSize } from '../size';
import { MenuAnimation } from '../menu-animation.interface';
import { ActionsService } from '../services/actions.service';
import { HoverService } from '../services/hover.service';
import { ItemsService } from '../services/items.service';
import { NavigationService } from '../services/navigation.service';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare class ListComponent implements OnInit, OnDestroy {
    private itemsService;
    private hover;
    private actions;
    private navigation;
    private renderer;
    private ngZone;
    element: ElementRef;
    items: any[];
    level: number;
    index: string;
    animate: boolean | MenuAnimation;
    size: MenuSize;
    vertical: boolean;
    rtl: boolean;
    openOnClick: any;
    itemTemplate: TemplateRef<any>;
    itemLinkTemplate: TemplateRef<any>;
    private domSubscriptions;
    constructor(itemsService: ItemsService, hover: HoverService, actions: ActionsService, navigation: NavigationService, renderer: Renderer2, ngZone: NgZone, element: ElementRef);
    hierarchyIndex(index: number): string;
    ngOnInit(): void;
    ngOnDestroy(): void;
    private initDomEvents;
    private leavesMenu;
    private onLeave;
    private nodeItem;
    private clickHandler;
    static ɵfac: i0.ɵɵFactoryDeclaration<ListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ListComponent, "[kendoMenuList]", never, { "items": "items"; "level": "level"; "index": "index"; "animate": "animate"; "size": "size"; "vertical": "vertical"; "rtl": "rtl"; "openOnClick": "openOnClick"; "itemTemplate": "itemTemplate"; "itemLinkTemplate": "itemLinkTemplate"; }, {}, never, never>;
}
/**
 * @hidden
 */
export declare class ItemComponent {
    private itemsService;
    private navigation;
    private changeDetector;
    private renderer;
    private popupService;
    element: ElementRef;
    private contextService?;
    item: any;
    level: number;
    set index(index: string);
    get index(): string;
    siblingIndex: number;
    animate: boolean | MenuAnimation;
    size: MenuSize;
    vertical: boolean;
    rtl: boolean;
    openOnClick: boolean;
    itemTemplate: TemplateRef<any>;
    itemLinkTemplate: TemplateRef<any>;
    link: ElementRef;
    popupTemplate: TemplateRef<any>;
    get disabled(): boolean;
    get hasPopup(): boolean;
    get expanded(): boolean;
    get label(): boolean;
    get activeId(): string;
    get popupSettings(): any;
    get horizontal(): boolean;
    get hasLink(): boolean;
    get linkTemplate(): TemplateRef<any>;
    get hasContent(): boolean;
    get isContent(): boolean;
    get iconClass(): string;
    get isContextMenu(): boolean;
    get menuListClasses(): string;
    get children(): any[];
    get template(): TemplateRef<any>;
    /**
     * @hidden
     */
    fontIcon: (horizontal: boolean, rtl: boolean) => string;
    /**
     * @hidden
     */
    SVGIcon: (horizontal: boolean, rtl: boolean) => import("@progress/kendo-svg-icons").SVGIcon;
    opened: boolean;
    navigating: boolean;
    childId: string;
    private contentItems;
    private popupRef;
    private _index;
    private destroyed;
    constructor(itemsService: ItemsService, navigation: NavigationService, changeDetector: ChangeDetectorRef, renderer: Renderer2, popupService: PopupService, element: ElementRef, contextService?: ContextMenuService);
    hasContentTemplates(): boolean;
    ngOnInit(): void;
    ngOnDestroy(): void;
    focus(): void;
    blur(): void;
    toggleActive(isActive: boolean): void;
    open(): void;
    close(): void;
    navigate(): void;
    private setAttribute;
    static ɵfac: i0.ɵɵFactoryDeclaration<ItemComponent, [null, null, null, null, null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ItemComponent, "[kendoMenuItem]", never, { "item": "item"; "level": "level"; "index": "index"; "siblingIndex": "siblingIndex"; "animate": "animate"; "size": "size"; "vertical": "vertical"; "rtl": "rtl"; "openOnClick": "openOnClick"; "itemTemplate": "itemTemplate"; "itemLinkTemplate": "itemLinkTemplate"; }, {}, never, never>;
}
