/**-----------------------------------------------------------------------------------------
* Copyright © 2023 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { PopupModule } from '@progress/kendo-angular-popup';
import { MenuComponent } from './menu.component';
import { MenuItemComponent } from './menu-item.component';
import { ListComponent, ItemComponent } from './rendering/list.component';
import { LinkDirective } from './rendering/link.directive';
import { ExpandArrowComponent } from './rendering/arrow.component';
import { ItemTemplateDirective } from './templates/item-template.directive';
import { ItemLinkTemplateDirective } from './templates/item-link-template.directive';
import { ItemContentTemplateDirective } from './templates/item-content-template.directive';
import { HierarchyBindingDirective } from './data-binding/hierachy-binding.directive';
import { FlatBindingDirective } from './data-binding/flat-binding.directive';
import { IconsModule } from '@progress/kendo-angular-icons';
import * as i0 from "@angular/core";
const COMPONENT_EXPORTS = [
    MenuComponent,
    MenuItemComponent,
    ItemTemplateDirective,
    ItemLinkTemplateDirective,
    ItemContentTemplateDirective,
    HierarchyBindingDirective,
    FlatBindingDirective,
    LinkDirective,
    ExpandArrowComponent
];
const COMPONENT_DIRECTIVES = [
    ...COMPONENT_EXPORTS,
    ListComponent,
    ItemComponent
];
/**
 * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])
 * definition for the Menu component.
 *
 * @example
 *
 * ```ts-no-run
 * // Import the Menu module
 * import { MenuModule } from '@progress/kendo-angular-menu';
 *
 * // The browser platform with a compiler
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
 *
 * import { NgModule } from '@angular/core';
 *
 * // Import the app component
 * import { AppComponent } from './app.component';
 *
 * // Define the app module
 * _@NgModule({
 *     declarations: [AppComponent], // declare app component
 *     imports:      [BrowserModule, BrowserAnimationsModule, MenuModule], // import Menu module
 *     bootstrap:    [AppComponent]
 * })
 * export class AppModule {}
 *
 * // Compile and launch the module
 * platformBrowserDynamic().bootstrapModule(AppModule);
 *
 * ```
 */
export class MenuModule {
}
MenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: MenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
MenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: MenuModule, declarations: [MenuComponent,
        MenuItemComponent,
        ItemTemplateDirective,
        ItemLinkTemplateDirective,
        ItemContentTemplateDirective,
        HierarchyBindingDirective,
        FlatBindingDirective,
        LinkDirective,
        ExpandArrowComponent, ListComponent,
        ItemComponent], imports: [PopupModule, CommonModule, IconsModule], exports: [MenuComponent,
        MenuItemComponent,
        ItemTemplateDirective,
        ItemLinkTemplateDirective,
        ItemContentTemplateDirective,
        HierarchyBindingDirective,
        FlatBindingDirective,
        LinkDirective,
        ExpandArrowComponent] });
MenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: MenuModule, imports: [[PopupModule, CommonModule, IconsModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: MenuModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [COMPONENT_DIRECTIVES],
                    exports: [COMPONENT_EXPORTS],
                    imports: [PopupModule, CommonModule, IconsModule]
                }]
        }] });
