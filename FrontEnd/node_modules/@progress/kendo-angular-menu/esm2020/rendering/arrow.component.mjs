/**-----------------------------------------------------------------------------------------
* Copyright © 2023 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Input, HostBinding, isDevMode, Component } from '@angular/core';
import { ItemsService } from '../services/items.service';
import { getFontIcon, getSVGIcon } from '../utils';
import * as i0 from "@angular/core";
import * as i1 from "../services/items.service";
import * as i2 from "@progress/kendo-angular-icons";
/**
 * Represents a component that can be used in the [`linkTemplate`]({% slug api_menu_itemlinktemplatedirective %})
 * of the items to render the default expand arrow.
 */
export class ExpandArrowComponent {
    constructor(itemsService) {
        this.itemsService = itemsService;
        this.hostClasses = true;
        this.ariaHidden = 'true';
    }
    ngOnInit() {
        if (isDevMode() && !this.index) {
            throw new Error('The kendoMenuExpandArrow component requires the item index to be set.');
        }
        this.item = this.itemsService.get(this.index) || {};
        this.fontIcon = getFontIcon(this.item.horizontal, this.item.rtl);
        this.SVGIcon = getSVGIcon(this.item.horizontal, this.item.rtl);
    }
}
ExpandArrowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: ExpandArrowComponent, deps: [{ token: i1.ItemsService }], target: i0.ɵɵFactoryTarget.Component });
ExpandArrowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.12", type: ExpandArrowComponent, selector: "[kendoMenuExpandArrow]", inputs: { index: ["kendoMenuExpandArrow", "index"] }, host: { properties: { "class.k-menu-expand-arrow": "this.hostClasses", "attr.aria-hidden": "this.ariaHidden" } }, ngImport: i0, template: `<kendo-icon-wrapper [name]="fontIcon" [svgIcon]="SVGIcon"></kendo-icon-wrapper>`, isInline: true, components: [{ type: i2.IconWrapperComponent, selector: "kendo-icon-wrapper", inputs: ["name", "svgIcon", "innerCssClass", "customFontClass", "size"], exportAs: ["kendoIconWrapper"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: ExpandArrowComponent, decorators: [{
            type: Component,
            args: [{
                    selector: '[kendoMenuExpandArrow]',
                    template: `<kendo-icon-wrapper [name]="fontIcon" [svgIcon]="SVGIcon"></kendo-icon-wrapper>`
                }]
        }], ctorParameters: function () { return [{ type: i1.ItemsService }]; }, propDecorators: { index: [{
                type: Input,
                args: ['kendoMenuExpandArrow']
            }], hostClasses: [{
                type: HostBinding,
                args: ['class.k-menu-expand-arrow']
            }], ariaHidden: [{
                type: HostBinding,
                args: ['attr.aria-hidden']
            }] } });
