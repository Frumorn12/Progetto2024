/**-----------------------------------------------------------------------------------------
* Copyright © 2023 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { NgZone } from '@angular/core';
import { ItemsService } from './items.service';
import { PreventableEvent } from '@progress/kendo-angular-common';
import * as i0 from "@angular/core";
/**
 * Used to remove cyclic dependency error. Dublicates MenuEvent
 * @hidden
 */
export declare class MenuStateEvent extends PreventableEvent {
    /**
     * The MenuComponent that triggered the event.
     */
    sender: any;
    /**
     * The item data of the event.
     */
    item: any;
    /**
     * The item index of the event.
     */
    index: string;
    constructor(args?: any);
}
/**
 * @hidden
 */
export declare class ActionsService {
    private ngZone;
    private items;
    owner: any;
    actions: any[];
    constructor(ngZone: NgZone, items: ItemsService);
    open(item: any, finished?: any): void;
    close(item: any): void;
    closeItem(item: any): void;
    closeToRoot(item: any): void;
    closeOthers(item: any): void;
    closeAll(): void;
    select(item: any, domEvent: any, prevented?: any, finished?: any): void;
    emit(name: string, item: any, domEvent?: any): boolean;
    get hasPending(): boolean;
    execute(toExecute?: any[]): void;
    clear(): any[];
    private executeActions;
    private requiresZone;
    private closeChildren;
    private closeItems;
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionsService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ActionsService>;
}
