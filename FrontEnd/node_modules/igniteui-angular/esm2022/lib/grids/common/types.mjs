import { InjectionToken } from '@angular/core';
/**
 * Injection token for accessing the grid transaction object.
 * This allows injecting the grid transaction object into components or services.
 */
export const IgxGridTransaction = new InjectionToken('IgxGridTransaction');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvZ3JpZHMvY29tbW9uL3R5cGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFpRy9DOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLElBQUksY0FBYyxDQUFTLG9CQUFvQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSByYW5nZSBzZWxlY3Rpb24gYmV0d2VlbiBjZXJ0YWluIHJvd3MgYW5kIGNvbHVtbnMgb2YgdGhlIGdyaWQuXG4gKiBSYW5nZSBzZWxlY3Rpb24gY2FuIGJlIG1hZGUgZWl0aGVyIHRocm91Z2ggZHJhZyBzZWxlY3Rpb24gb3IgdGhyb3VnaCBrZXlib2FyZCBzZWxlY3Rpb24uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgR3JpZFNlbGVjdGlvblJhbmdlIHtcbiAgICAvKiogVGhlIGluZGV4IG9mIHRoZSBzdGFydGluZyByb3cgb2YgdGhlIHNlbGVjdGlvbiByYW5nZS4gKi9cbiAgICByb3dTdGFydDogbnVtYmVyO1xuICAgICAvKiogVGhlIGluZGV4IG9mIHRoZSBlbmRpbmcgcm93IG9mIHRoZSBzZWxlY3Rpb24gcmFuZ2UuICovXG4gICAgcm93RW5kOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogVGhlIGlkZW50aWZpZXIgb3IgaW5kZXggb2YgdGhlIHN0YXJ0aW5nIGNvbHVtbiBvZiB0aGUgc2VsZWN0aW9uIHJhbmdlLlxuICAgICAqIEl0IGNhbiBiZSBlaXRoZXIgYSBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSBjb2x1bW4ncyBmaWVsZCBuYW1lIG9yIGEgbnVtZXJpYyBpbmRleC5cbiAgICAgKi9cbiAgICBjb2x1bW5TdGFydDogc3RyaW5nIHwgbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIFRoZSBpZGVudGlmaWVyIG9yIGluZGV4IG9mIHRoZSBlbmRpbmcgY29sdW1uIG9mIHRoZSBzZWxlY3Rpb24gcmFuZ2UuXG4gICAgICogSXQgY2FuIGJlIGVpdGhlciBhIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIGNvbHVtbidzIGZpZWxkIG5hbWUgb3IgYSBudW1lcmljIGluZGV4LlxuICAgICAqL1xuICAgIGNvbHVtbkVuZDogc3RyaW5nIHwgbnVtYmVyO1xufVxuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBzaW5nbGUgc2VsZWN0ZWQgY2VsbCBvciBub2RlIGluIGEgZ3JpZC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJU2VsZWN0aW9uTm9kZSB7XG4gICAgLyoqXG4gICAgICogVGhlIGluZGV4IG9mIHRoZSBzZWxlY3RlZCByb3cuXG4gICAgICovXG4gICAgcm93OiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogVGhlIGluZGV4IG9mIHRoZSBzZWxlY3RlZCBjb2x1bW4uXG4gICAgICovXG4gICAgY29sdW1uOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogKE9wdGlvbmFsKSBcbiAgICAgKiBBZGRpdGlvbmFsIGxheW91dCBpbmZvcm1hdGlvbiBmb3IgbXVsdGktcm93IHNlbGVjdGlvbiBub2Rlcy5cbiAgICAgKi9cbiAgICBsYXlvdXQ/OiBJTXVsdGlSb3dMYXlvdXROb2RlO1xuICAgIC8qKlxuICAgICAqIChPcHRpb25hbCkgXG4gICAgICogSW5kaWNhdGVzIGlmIHRoZSBzZWxlY3RlZCBub2RlIGlzIGEgc3VtbWFyeSByb3cuXG4gICAgICogVGhpcyBwcm9wZXJ0eSBpcyB0cnVlIGlmIHRoZSBzZWxlY3RlZCByb3cgaXMgYSBzdW1tYXJ5IHJvdzsgb3RoZXJ3aXNlLCBpdCBpcyBmYWxzZS5cbiAgICAgKi9cbiAgICBpc1N1bW1hcnlSb3c/OiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElNdWx0aVJvd0xheW91dE5vZGUge1xuICAgIHJvd1N0YXJ0OiBudW1iZXI7XG4gICAgY29sU3RhcnQ6IG51bWJlcjtcbiAgICByb3dFbmQ6IG51bWJlcjtcbiAgICBjb2xFbmQ6IG51bWJlcjtcbiAgICBjb2x1bW5WaXNpYmxlSW5kZXg6IG51bWJlcjtcbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBzdGF0ZSBvZiB0aGUga2V5Ym9hcmQgd2hlbiBzZWxlY3RpbmcuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgSVNlbGVjdGlvbktleWJvYXJkU3RhdGUge1xuICAgIC8qKiBUaGUgc2VsZWN0ZWQgbm9kZSBpbiB0aGUgZ3JpZCwgaWYgYW55LiBDYW4gYmUgbnVsbCBpZiBubyBub2RlIGlzIHNlbGVjdGVkLiAqL1xuICAgIG5vZGU6IG51bGwgfCBJU2VsZWN0aW9uTm9kZTtcbiAgICAvKiogSW5kaWNhdGVzIHdoZXRoZXIgdGhlIFNoaWZ0IGtleSBpcyBjdXJyZW50bHkgcHJlc3NlZCBkdXJpbmcgdGhlIHNlbGVjdGlvbi4gKi9cbiAgICBzaGlmdDogYm9vbGVhbjtcbiAgICAvKiogVGhlIHJhbmdlIG9mIHRoZSBzZWxlY3RlZCBjZWxscyBpbiB0aGUgZ3JpZC4gQ2FuIGJlIG51bGwgd2hlbiByZXNldGluZyB0aGUgc2VsZWN0aW9uLiAqL1xuICAgIHJhbmdlOiBHcmlkU2VsZWN0aW9uUmFuZ2U7XG4gICAgLyoqIEluZGljYXRlcyB3aGV0aGVyIHRoZSBzZWxlY3Rpb24gaXMgY3VycmVudGx5IGFjdGl2ZSAoYmVpbmcgcGVyZm9ybWVkKS4gYEZhbHNlYCB3aGVuIHJlc2V0aW5nIHRoZSBzZWxlY3Rpb24uICAqL1xuICAgIGFjdGl2ZTogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBzdGF0ZSBvZiB0aGUgZ3JpZCBzZWxlY3Rpb24gdXNpbmcgcG9pbnRlciBpbnRlcmFjdGlvbnMgKG1vdXNlKS5cbiAqIEV4dGVuZHMgSVNlbGVjdGlvbktleWJvYXJkU3RhdGUgdG8gaW5jbHVkZSBwb2ludGVyLXNwZWNpZmljIHByb3BlcnRpZXMuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgSVNlbGVjdGlvblBvaW50ZXJTdGF0ZSBleHRlbmRzIElTZWxlY3Rpb25LZXlib2FyZFN0YXRlIHtcbiAgICAvKiogSW5kaWNhdGVzIHdoZXRoZXIgdGhlIEN0cmwga2V5IGlzIGN1cnJlbnRseSBwcmVzc2VkIGR1cmluZyB0aGUgc2VsZWN0aW9uLiAqL1xuICAgIGN0cmw6IGJvb2xlYW47XG4gICAgLyoqIEluZGljYXRlcyB3aGV0aGVyIHRoZSBwcmltYXJ5IHBvaW50ZXIgYnV0dG9uIGlzIHByZXNzZWQgZHVyaW5nIHRoZSBzZWxlY3Rpb24gKGNsaWNrZWQpLiAqL1xuICAgIHByaW1hcnlCdXR0b246IGJvb2xlYW47XG59XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgc3RhdGUgb2YgdGhlIGNvbHVtbnMgaW4gdGhlIGdyaWQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgSUNvbHVtblNlbGVjdGlvblN0YXRlIHtcbiAgICAgLyoqIFJlcHJlc2VudHMgdGhlIGZpZWxkIG5hbWUgb2YgdGhlIHNlbGVjdGVkIGNvbHVtbiwgaWYgYW55LiBDYW4gYmUgbnVsbCBpZiBubyBjb2x1bW4gaXMgc2VsZWN0ZWQuICovXG4gICAgZmllbGQ6IG51bGwgfCBzdHJpbmc7XG4gICAgLyoqIEFuIGFycmF5IG9mIHN0cmluZ3MgcmVwcmVzZW50aW5nIHRoZSByYW5nZXMgb2Ygc2VsZWN0ZWQgY29sdW1ucyBpbiB0aGUgZ3JpZC4gKi9cbiAgICByYW5nZTogc3RyaW5nW107XG59XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgb3ZlcmFsbCBzdGF0ZSBvZiBncmlkIHNlbGVjdGlvbiwgY29tYmluaW5nIGJvdGgga2V5Ym9hcmQgYW5kIHBvaW50ZXIgaW50ZXJhY3Rpb24gc3RhdGVzLlxuICogSXQgY2FuIGJlIGVpdGhlciBhbiBJU2VsZWN0aW9uS2V5Ym9hcmRTdGF0ZSBvciBhbiBJU2VsZWN0aW9uUG9pbnRlclN0YXRlLlxuICovXG5leHBvcnQgdHlwZSBTZWxlY3Rpb25TdGF0ZSA9IElTZWxlY3Rpb25LZXlib2FyZFN0YXRlIHwgSVNlbGVjdGlvblBvaW50ZXJTdGF0ZTtcblxuLyoqXG4gKiBJbmplY3Rpb24gdG9rZW4gZm9yIGFjY2Vzc2luZyB0aGUgZ3JpZCB0cmFuc2FjdGlvbiBvYmplY3QuXG4gKiBUaGlzIGFsbG93cyBpbmplY3RpbmcgdGhlIGdyaWQgdHJhbnNhY3Rpb24gb2JqZWN0IGludG8gY29tcG9uZW50cyBvciBzZXJ2aWNlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IElneEdyaWRUcmFuc2FjdGlvbiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxzdHJpbmc+KCdJZ3hHcmlkVHJhbnNhY3Rpb24nKTtcbiJdfQ==