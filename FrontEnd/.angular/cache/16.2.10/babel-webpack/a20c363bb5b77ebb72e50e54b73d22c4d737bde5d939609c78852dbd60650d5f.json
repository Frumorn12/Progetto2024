{"ast":null,"code":"import { FormControl } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nexport class RegistrazioneComponent {\n  constructor() {\n    this.nome = new FormControl();\n    this.password = '';\n    this.strength = 0;\n  }\n  onPasswordChange() {\n    this.strength = calculateStrength(this.password);\n  }\n  getStrengthColor() {\n    // Restituisci uno stile CSS in base alla forza della password, ad esempio, un gradiente di colore\n    const color = this.strength < 50 ? 'red' : 'green';\n    return {\n      'background': `linear-gradient(to right, ${color} ${this.strength}%, #eee ${this.strength}%)`\n    };\n  }\n  static #_ = this.ɵfac = function RegistrazioneComponent_Factory(t) {\n    return new (t || RegistrazioneComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrazioneComponent,\n    selectors: [[\"app-registrazione\"]],\n    decls: 39,\n    vars: 5,\n    consts: [[\"lang\", \"en\", 1, \"app-routing-module-container\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [\"for\", \"nome\"], [\"type\", \"text\", \"id\", \"nome\", \"name\", \"nome\", \"required\", \"\"], [\"for\", \"cognome\"], [\"type\", \"text\", \"id\", \"cognome\", \"name\", \"cognome\", \"required\", \"\"], [\"for\", \"data_nascita\"], [\"type\", \"date\", \"id\", \"data_nascita\", \"name\", \"data_nascita\", \"required\", \"\"], [\"for\", \"indirizzo\"], [\"type\", \"text\", \"id\", \"indirizzo\", \"name\", \"indirizzo\", \"required\", \"\"], [\"for\", \"civico\"], [\"type\", \"number\", \"id\", \"civico\", \"name\", \"civico\", \"required\", \"\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"strength-meter\"], [3, \"ngStyle\"], [\"type\", \"submit\"]],\n    template: function RegistrazioneComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Registrazione\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\")(7, \"form\")(8, \"h2\");\n        i0.ɵɵtext(9, \"Registrati\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\", 3);\n        i0.ɵɵtext(11, \"Nome:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 4);\n        i0.ɵɵelementStart(13, \"label\", 5);\n        i0.ɵɵtext(14, \"Cognome:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 6);\n        i0.ɵɵelementStart(16, \"label\", 7);\n        i0.ɵɵtext(17, \"Data di nascita:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 8);\n        i0.ɵɵelementStart(19, \"label\", 9);\n        i0.ɵɵtext(20, \"Via:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 10);\n        i0.ɵɵelementStart(22, \"label\", 11);\n        i0.ɵɵtext(23, \"Civico:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 12);\n        i0.ɵɵelementStart(25, \"label\", 13);\n        i0.ɵɵtext(26, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 14);\n        i0.ɵɵelementStart(28, \"label\", 15);\n        i0.ɵɵtext(29, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 16);\n        i0.ɵɵelementStart(31, \"label\", 17);\n        i0.ɵɵtext(32, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"input\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function RegistrazioneComponent_Template_input_ngModelChange_33_listener($event) {\n          return ctx.password = $event;\n        })(\"input\", function RegistrazioneComponent_Template_input_input_33_listener() {\n          return ctx.onPasswordChange();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 19)(35, \"div\", 20);\n        i0.ɵɵtext(36);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"button\", 21);\n        i0.ɵɵtext(38, \"Registrati\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(33);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"width\", ctx.strength, \"%\");\n        i0.ɵɵproperty(\"ngStyle\", ctx.getStrengthColor());\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" Forza: \", ctx.strength, \"% \");\n      }\n    },\n    dependencies: [i1.NgStyle, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"body[_ngcontent-%COMP%] {\\n      font-family: Arial, sans-serif;\\n      background-color: #f4f4f4;\\n      margin: 0;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      height: 100vh;\\n    }\\n\\n    form[_ngcontent-%COMP%] {\\n      background-color: #fff;\\n      padding: 20px;\\n      border-radius: 8px;\\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n      width: 700px; \\n\\n      box-sizing: border-box;\\n    }\\n\\n    label[_ngcontent-%COMP%] {\\n      display: block;\\n      margin-bottom: 8px;\\n    }\\n\\n    input[_ngcontent-%COMP%] {\\n      width: 100%;\\n      padding: 8px;\\n      margin-bottom: 16px;\\n      box-sizing: border-box;\\n    }\\n\\n    .strength-meter[_ngcontent-%COMP%] {\\n      height: 20px;\\n      margin-bottom: 16px;\\n      overflow: hidden;\\n      border-radius: 4px;\\n      background-color: #f0f0f0;\\n    }\\n\\n    .strength-meter[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n      height: 100%;\\n      color: #fff;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n    }\\n\\n    \\n\\n    .weak[_ngcontent-%COMP%] { background-color: #ff6347; }\\n    .medium[_ngcontent-%COMP%] { background-color: #ffa500; }\\n    .strong[_ngcontent-%COMP%] { background-color: #008000; }\\n\\n    button[_ngcontent-%COMP%] {\\n      background-color: #4caf50;\\n      color: white;\\n      padding: 10px 15px;\\n      border: none;\\n      border-radius: 4px;\\n      cursor: pointer;\\n    }\\n\\n    button[_ngcontent-%COMP%]:hover {\\n      background-color: #45a049;\\n    }\"]\n  });\n}","map":{"version":3,"names":["FormControl","RegistrazioneComponent","constructor","nome","password","strength","onPasswordChange","calculateStrength","getStrengthColor","color","_","_2","selectors","decls","vars","consts","template","RegistrazioneComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegistrazioneComponent_Template_input_ngModelChange_33_listener","$event","RegistrazioneComponent_Template_input_input_33_listener","ɵɵadvance","ɵɵproperty","ɵɵstyleProp","ɵɵtextInterpolate1"],"sources":["D:\\codici\\ProgettoWebFrontEnd\\src\\app\\registrazione\\registrazione.component.ts","D:\\codici\\ProgettoWebFrontEnd\\src\\app\\registrazione\\registrazione.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormControl} from \"@angular/forms\";\ndeclare const calculateStrength: (password: string) => number; // Importa la funzione dalla logica JavaScript\n\n@Component({\n  selector: 'app-registrazione',\n  templateUrl: './registrazione.component.html',\n  styleUrls: ['./registrazione.component.css']\n})\nexport class RegistrazioneComponent {\n  nome = new FormControl();\n  \n  password: string = '';\n  strength: number = 0;\n\n  onPasswordChange() {\n    this.strength = calculateStrength(this.password);\n  }\n\n  getStrengthColor() {\n    // Restituisci uno stile CSS in base alla forza della password, ad esempio, un gradiente di colore\n    const color = this.strength < 50 ? 'red' : 'green';\n    return { 'background': `linear-gradient(to right, ${color} ${this.strength}%, #eee ${this.strength}%)` };\n  }\n\n\n}\n","<!-- Nel tuo file HTML -->\n\n<!DOCTYPE html>\n<html lang=\"en\" class=\"app-routing-module-container\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Registrazione</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background-color: #f4f4f4;\n      margin: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100vh;\n    }\n\n    form {\n      background-color: #fff;\n      padding: 20px;\n      border-radius: 8px;\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n      width: 700px; /* Imposta la larghezza desiderata */\n      box-sizing: border-box;\n    }\n\n    label {\n      display: block;\n      margin-bottom: 8px;\n    }\n\n    input {\n      width: 100%;\n      padding: 8px;\n      margin-bottom: 16px;\n      box-sizing: border-box;\n    }\n\n    .strength-meter {\n      height: 20px;\n      margin-bottom: 16px;\n      overflow: hidden;\n      border-radius: 4px;\n      background-color: #f0f0f0;\n    }\n\n    .strength-meter div {\n      height: 100%;\n      color: #fff;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    /* Define different colors based on strength (adjust as needed) */\n    .weak { background-color: #ff6347; }\n    .medium { background-color: #ffa500; }\n    .strong { background-color: #008000; }\n\n    button {\n      background-color: #4caf50;\n      color: white;\n      padding: 10px 15px;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n\n    button:hover {\n      background-color: #45a049;\n    }\n  </style>\n</head>\n<body>\n\n<form >\n  <h2>Registrati</h2>\n\n  <!-- Campi del form -->\n  <label for=\"nome\">Nome:</label>\n  <input type=\"text\" id=\"nome\" name=\"nome\" required>\n\n  <label for=\"cognome\">Cognome:</label>\n  <input type=\"text\" id=\"cognome\" name=\"cognome\" required>\n\n  <label for=\"data_nascita\">Data di nascita:</label>\n  <input type=\"date\" id=\"data_nascita\" name=\"data_nascita\" required>\n\n  <label for=\"indirizzo\">Via:</label>\n  <input type=\"text\" id=\"indirizzo\" name=\"indirizzo\" required>\n\n  <label for=\"civico\">Civico:</label>\n  <input type=\"number\" id=\"civico\" name=\"civico\" required>\n\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\"  name=\"username\" required>\n\n\n\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\"   name=\"email\" required>\n\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" (input)=\"onPasswordChange()\" name=\"password\" required>\n\n  <div class=\"strength-meter\">\n    <div [style.width.%]=\"strength\" [ngStyle]=\"getStrengthColor()\">\n      Forza: {{ strength }}%\n    </div>\n  </div>\n\n  <button type=\"submit\">Registrati</button>\n</form>\n\n</body>\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}