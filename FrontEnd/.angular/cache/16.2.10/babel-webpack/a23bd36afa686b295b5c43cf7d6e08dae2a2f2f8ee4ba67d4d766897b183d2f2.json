{"ast":null,"code":"import { FormControl } from \"@angular/forms\";\nimport { map, startWith } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/autocomplete\";\nimport * as i4 from \"@angular/material/core\";\nfunction HeaderComponent_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r1, \" \");\n  }\n}\nexport class HeaderComponent {\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n  }\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n  constructor(authService) {\n    this.authService = authService;\n    this.myControl = new FormControl();\n    this.options = ['One', 'Two', 'Three'];\n  }\n  getRandomPhotoUrl() {\n    console.log(getRandomPhoto());\n    return getRandomPhoto();\n  }\n  isAuthenticated() {\n    return this.authService.isAuthenticated();\n  }\n  doLogout() {\n    console.log(\"click\");\n    this.authService.logout();\n  }\n  static #_ = this.ɵfac = function HeaderComponent_Factory(t) {\n    return new (t || HeaderComponent)(i0.ɵɵdirectiveInject(i1.AuthServiceService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HeaderComponent,\n    selectors: [[\"app-header\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function HeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-autocomplete\");\n        i0.ɵɵtemplate(1, HeaderComponent_mat_option_1_Template, 2, 2, \"mat-option\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.options);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.MatAutocomplete, i4.MatOption],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","map","startWith","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r1","ɵɵadvance","ɵɵtextInterpolate1","HeaderComponent","ngOnInit","filteredOptions","myControl","valueChanges","pipe","value","_filter","filterValue","toLowerCase","options","filter","option","includes","constructor","authService","getRandomPhotoUrl","console","log","getRandomPhoto","isAuthenticated","doLogout","logout","_","ɵɵdirectiveInject","i1","AuthServiceService","_2","selectors","decls","vars","consts","template","HeaderComponent_Template","rf","ctx","ɵɵtemplate","HeaderComponent_mat_option_1_Template"],"sources":["D:\\codici\\ProgettoWebFrontEnd\\src\\app\\header\\header.component.ts","D:\\codici\\ProgettoWebFrontEnd\\src\\app\\header\\header.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport { AuthServiceService } from '../services/auth-service.service';\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {map, Observable, startWith} from \"rxjs\";\r\n\r\ndeclare function getRandomPhoto(): string;\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\n\r\n\r\nexport class HeaderComponent  implements OnInit{\r\n\r\n  myControl = new FormControl();\r\n  options: string[] = ['One', 'Two', 'Three'];\r\n  filteredOptions: Observable<string[]> | undefined;\r\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.myControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => this._filter(value))\r\n      );\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n\r\n\r\n  constructor(private authService: AuthServiceService){}\r\n\r\n  getRandomPhotoUrl(){\r\n    console.log(getRandomPhoto());\r\n    return getRandomPhoto();\r\n  }\r\n\r\n  isAuthenticated(){\r\n    return this.authService.isAuthenticated();\r\n  }\r\n  doLogout(){\r\n    console.log(\"click\");\r\n    this.authService.logout();\r\n  }\r\n\r\n\r\n}\r\n","<mat-autocomplete>\r\n  <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n    {{ option }}\r\n  </mat-option>\r\n</mat-autocomplete>\r\n"],"mappings":"AAEA,SAAQA,WAAW,QAAO,gBAAgB;AAC1C,SAAQC,GAAG,EAAcC,SAAS,QAAO,MAAM;;;;;;;;ICF7CC,EAAA,CAAAC,cAAA,oBAA4D;IAC1DD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAF8BH,EAAA,CAAAI,UAAA,UAAAC,SAAA,CAAgB;IACzDL,EAAA,CAAAM,SAAA,GACF;IADEN,EAAA,CAAAO,kBAAA,MAAAF,SAAA,MACF;;;ADWF,OAAM,MAAOG,eAAe;EAM1BC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,GAAG,IAAI,CAACC,SAAS,CAACC,YAAY,CAC/CC,IAAI,CACHd,SAAS,CAAC,EAAE,CAAC,EACbD,GAAG,CAACgB,KAAK,IAAI,IAAI,CAACC,OAAO,CAACD,KAAK,CAAC,CAAC,CAClC;EACL;EAEQC,OAAOA,CAACD,KAAa;IAC3B,MAAME,WAAW,GAAGF,KAAK,CAACG,WAAW,EAAE;IAEvC,OAAO,IAAI,CAACC,OAAO,CAACC,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACH,WAAW,EAAE,CAACI,QAAQ,CAACL,WAAW,CAAC,CAAC;EAClF;EAKAM,YAAoBC,WAA+B;IAA/B,KAAAA,WAAW,GAAXA,WAAW;IArB/B,KAAAZ,SAAS,GAAG,IAAId,WAAW,EAAE;IAC7B,KAAAqB,OAAO,GAAa,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC;EAoBU;EAErDM,iBAAiBA,CAAA;IACfC,OAAO,CAACC,GAAG,CAACC,cAAc,EAAE,CAAC;IAC7B,OAAOA,cAAc,EAAE;EACzB;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACL,WAAW,CAACK,eAAe,EAAE;EAC3C;EACAC,QAAQA,CAAA;IACNJ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,IAAI,CAACH,WAAW,CAACO,MAAM,EAAE;EAC3B;EAAC,QAAAC,CAAA,G;qBApCUvB,eAAe,EAAAR,EAAA,CAAAgC,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAf3B,eAAe;IAAA4B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCd5B1C,EAAA,CAAAC,cAAA,uBAAkB;QAChBD,EAAA,CAAA4C,UAAA,IAAAC,qCAAA,wBAEa;QACf7C,EAAA,CAAAG,YAAA,EAAmB;;;QAHcH,EAAA,CAAAM,SAAA,GAAU;QAAVN,EAAA,CAAAI,UAAA,YAAAuC,GAAA,CAAAzB,OAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}