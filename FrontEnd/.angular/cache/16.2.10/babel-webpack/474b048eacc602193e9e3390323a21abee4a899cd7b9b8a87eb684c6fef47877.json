{"ast":null,"code":"import { FormControl } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../errore-messaggio/errore-messaggio.component\";\nconst _c0 = [\"registrationForm\"];\nfunction RegistrazioneComponent_app_errore_messaggio_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-errore-messaggio\", 30);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"messaggio\", \"Inserire tutti i campi\");\n  }\n}\nfunction RegistrazioneComponent_app_errore_messaggio_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-errore-messaggio\", 30);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"messaggio\", \"Password non valida\");\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nexport class RegistrazioneComponent {\n  constructor(router) {\n    this.router = router;\n    this.nome = new FormControl();\n    this.cognome = new FormControl();\n    this.username = new FormControl();\n    this.email = new FormControl();\n    this.data = new FormControl();\n    this.via = new FormControl();\n    this.civico = new FormControl();\n    this.password1 = new FormControl();\n    this.address1Field = new HTMLInputElement();\n    this.address2Field = new HTMLInputElement();\n    this.postalField = new HTMLInputElement();\n    this.password = '';\n    this.strength = 0;\n    // Nel tuo componente TypeScript\n    this.formIsValid = false;\n    this.passwordLengthValid = false;\n  }\n  onPasswordChange() {\n    this.strength = calculateStrength(this.password);\n    this.passwordLengthValid = this.password.length >= 8;\n    console.log(this.formIsValid);\n  }\n  getStrengthColor() {\n    // Restituisci uno stile CSS in base alla forza della password, ad esempio, un gradiente di colore\n    const color = this.strength < 50 ? 'red' : 'green';\n    return {\n      'background': `linear-gradient(to right, ${color} ${this.strength}%, #eee ${this.strength}%)`\n    };\n  }\n  go() {\n    console.log(\"TEST VEDO SE VA GO\");\n    this.router.navigate(['/']);\n  }\n  updateFormValidity() {\n    // Controlla se tutti i campi richiesti sono stati toccati\n    if (this.nome.value == null || this.cognome.value == null || this.username.value == null || this.email.value == null || this.data.value == null || this.via.value == null || this.civico.value == null) {\n      this.formIsValid = false;\n    } else if (this.nome.value == \"\" || this.cognome.value == \"\" || this.username.value == \"\" || this.email.value == \"\" || this.data.value == \"\" || this.via.value == \"\" || this.civico.value == \"\") {\n      this.formIsValid = false;\n    } else {\n      this.formIsValid = true;\n    }\n    console.log(this.formIsValid);\n  }\n  change() {\n    this.updateFormValidity();\n  }\n  static #_ = this.ɵfac = function RegistrazioneComponent_Factory(t) {\n    return new (t || RegistrazioneComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrazioneComponent,\n    selectors: [[\"app-registrazione\"]],\n    viewQuery: function RegistrazioneComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.registrationForm = _t.first);\n      }\n    },\n    decls: 51,\n    vars: 19,\n    consts: [[\"lang\", \"en\", 1, \"app-routing-module-container\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [3, \"ngSubmit\"], [\"myForm\", \"ngForm\"], [1, \"title\"], [1, \"note\"], [1, \"full-field\"], [1, \"form-label\"], [\"id\", \"ship-address\", \"name\", \"ship-address\", \"required\", \"\", \"autocomplete\", \"off\"], [\"for\", \"nome\"], [\"type\", \"text\", \"id\", \"nome\", \"name\", \"nome\", \"required\", \"\", 3, \"formControl\", \"input\"], [\"for\", \"cognome\"], [\"type\", \"text\", \"id\", \"cognome\", \"name\", \"cognome\", \"required\", \"\", 3, \"formControl\", \"input\"], [\"for\", \"data_nascita\"], [\"type\", \"date\", \"id\", \"data_nascita\", \"name\", \"data_nascita\", \"required\", \"\", 3, \"formControl\", \"input\"], [\"for\", \"indirizzo\"], [\"type\", \"text\", \"id\", \"indirizzo\", \"name\", \"indirizzo\", \"required\", \"\", 3, \"formControl\", \"input\"], [\"for\", \"civico\"], [\"type\", \"number\", \"id\", \"civico\", \"name\", \"civico\", \"required\", \"\", 3, \"formControl\", \"input\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"formControl\", \"input\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"formControl\", \"input\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"formControl\", \"ngModelChange\", \"input\"], [1, \"strength-meter\"], [3, \"ngStyle\"], [\"type\", \"submit\", 3, \"disabled\", \"ngStyle\"], [3, \"messaggio\", 4, \"ngIf\"], [3, \"messaggio\"]],\n    template: function RegistrazioneComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Registrazione\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\")(7, \"form\", 3, 4);\n        i0.ɵɵlistener(\"ngSubmit\", function RegistrazioneComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.go();\n        });\n        i0.ɵɵelementStart(9, \"h2\");\n        i0.ɵɵtext(10, \"Registrati\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\", 5);\n        i0.ɵɵtext(12, \"Sample address form for North America\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\", 6)(14, \"em\");\n        i0.ɵɵtext(15, \"* = required field\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"label\", 7)(17, \"span\", 8);\n        i0.ɵɵtext(18, \"Deliver to*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"label\", 10);\n        i0.ɵɵtext(21, \"Nome:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"input\", 11);\n        i0.ɵɵlistener(\"input\", function RegistrazioneComponent_Template_input_input_22_listener() {\n          return ctx.change();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"label\", 12);\n        i0.ɵɵtext(24, \"Cognome:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"input\", 13);\n        i0.ɵɵlistener(\"input\", function RegistrazioneComponent_Template_input_input_25_listener() {\n          return ctx.change();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"label\", 14);\n        i0.ɵɵtext(27, \"Data di nascita:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"input\", 15);\n        i0.ɵɵlistener(\"input\", function RegistrazioneComponent_Template_input_input_28_listener() {\n          return ctx.change();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"label\", 16);\n        i0.ɵɵtext(30, \"Via:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"input\", 17);\n        i0.ɵɵlistener(\"input\", function RegistrazioneComponent_Template_input_input_31_listener() {\n          return ctx.change();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"label\", 18);\n        i0.ɵɵtext(33, \"Civico:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"input\", 19);\n        i0.ɵɵlistener(\"input\", function RegistrazioneComponent_Template_input_input_34_listener() {\n          return ctx.change();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"label\", 20);\n        i0.ɵɵtext(36, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"input\", 21);\n        i0.ɵɵlistener(\"input\", function RegistrazioneComponent_Template_input_input_37_listener() {\n          return ctx.change();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"label\", 22);\n        i0.ɵɵtext(39, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"input\", 23);\n        i0.ɵɵlistener(\"input\", function RegistrazioneComponent_Template_input_input_40_listener() {\n          return ctx.change();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"label\", 24);\n        i0.ɵɵtext(42, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"input\", 25);\n        i0.ɵɵlistener(\"ngModelChange\", function RegistrazioneComponent_Template_input_ngModelChange_43_listener($event) {\n          return ctx.password = $event;\n        })(\"input\", function RegistrazioneComponent_Template_input_input_43_listener() {\n          return ctx.onPasswordChange();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 26)(45, \"div\", 27);\n        i0.ɵɵtext(46);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(47, \"button\", 28);\n        i0.ɵɵtext(48, \"Registrati\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(49, RegistrazioneComponent_app_errore_messaggio_49_Template, 1, 1, \"app-errore-messaggio\", 29);\n        i0.ɵɵtemplate(50, RegistrazioneComponent_app_errore_messaggio_50_Template, 1, 1, \"app-errore-messaggio\", 29);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"formControl\", ctx.nome);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.cognome);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.data);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.via);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.civico);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.username);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.email);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.password)(\"formControl\", ctx.password1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"width\", ctx.strength, \"%\");\n        i0.ɵɵproperty(\"ngStyle\", ctx.getStrengthColor());\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" Forza: \", ctx.strength, \"% \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.formIsValid || !ctx.passwordLengthValid)(\"ngStyle\", i0.ɵɵpureFunction1(17, _c1, ctx.formIsValid && ctx.passwordLengthValid ? \"#4caf50\" : \"#ddd\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.formIsValid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.passwordLengthValid);\n      }\n    },\n    dependencies: [i2.NgIf, i2.NgStyle, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgForm, i3.FormControlDirective, i4.ErroreMessaggioComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"body[_ngcontent-%COMP%] {\\n      font-family: Arial, sans-serif;\\n      background-color: #f4f4f4;\\n      margin: 0;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      height: 100vh;\\n    }\\n\\n    form[_ngcontent-%COMP%] {\\n      background-color: #fff;\\n      padding: 20px;\\n      border-radius: 8px;\\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n      width: 700px; \\n\\n      box-sizing: border-box;\\n    }\\n\\n    label[_ngcontent-%COMP%] {\\n      display: block;\\n      margin-bottom: 8px;\\n    }\\n\\n    input[_ngcontent-%COMP%] {\\n      width: 100%;\\n      padding: 8px;\\n      margin-bottom: 16px;\\n      box-sizing: border-box;\\n    }\\n\\n    .strength-meter[_ngcontent-%COMP%] {\\n      height: 20px;\\n      margin-bottom: 16px;\\n      overflow: hidden;\\n      border-radius: 4px;\\n      background-color: #f0f0f0;\\n    }\\n\\n    .strength-meter[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n      height: 100%;\\n      color: #fff;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n    }\\n\\n    \\n\\n    .weak[_ngcontent-%COMP%] { background-color: #ff6347; }\\n    .medium[_ngcontent-%COMP%] { background-color: #ffa500; }\\n    .strong[_ngcontent-%COMP%] { background-color: #008000; }\\n\\n    button[_ngcontent-%COMP%] {\\n      background-color: #4caf50;\\n      color: white;\\n      padding: 10px 15px;\\n      border: none;\\n      border-radius: 4px;\\n      cursor: pointer;\\n    }\\n\\n    button[_ngcontent-%COMP%]:hover {\\n      background-color: #45a049;\\n    }\"]\n  });\n}\nfunction initAutocomplete() {\n  address1Field = document.querySelector(\"#ship-address\");\n  address2Field = document.querySelector(\"#address2\");\n  postalField = document.querySelector(\"#postcode\");\n  // Create the autocomplete object, restricting the search predictions to\n  // addresses in the US and Canada.\n  autocomplete = new google.maps.places.Autocomplete(address1Field, {\n    componentRestrictions: {\n      country: [\"us\", \"ca\"]\n    },\n    fields: [\"address_components\", \"geometry\"],\n    types: [\"address\"]\n  });\n  address1Field.focus();\n  // When the user selects an address from the drop-down, populate the\n  // address fields in the form.\n  autocomplete.addListener(\"place_changed\", fillInAddress);\n}","map":{"version":3,"names":["FormControl","i0","ɵɵelement","ɵɵproperty","RegistrazioneComponent","constructor","router","nome","cognome","username","email","data","via","civico","password1","address1Field","HTMLInputElement","address2Field","postalField","password","strength","formIsValid","passwordLengthValid","onPasswordChange","calculateStrength","length","console","log","getStrengthColor","color","go","navigate","updateFormValidity","value","change","_","ɵɵdirectiveInject","i1","Router","_2","selectors","viewQuery","RegistrazioneComponent_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegistrazioneComponent_Template_form_ngSubmit_7_listener","RegistrazioneComponent_Template_input_input_22_listener","RegistrazioneComponent_Template_input_input_25_listener","RegistrazioneComponent_Template_input_input_28_listener","RegistrazioneComponent_Template_input_input_31_listener","RegistrazioneComponent_Template_input_input_34_listener","RegistrazioneComponent_Template_input_input_37_listener","RegistrazioneComponent_Template_input_input_40_listener","RegistrazioneComponent_Template_input_ngModelChange_43_listener","$event","RegistrazioneComponent_Template_input_input_43_listener","ɵɵtemplate","RegistrazioneComponent_app_errore_messaggio_49_Template","RegistrazioneComponent_app_errore_messaggio_50_Template","ɵɵadvance","ɵɵstyleProp","ɵɵtextInterpolate1","ɵɵpureFunction1","_c1","initAutocomplete","document","querySelector","autocomplete","google","maps","places","Autocomplete","componentRestrictions","country","fields","types","focus","addListener","fillInAddress"],"sources":["D:\\codici\\ProgettoWebFrontEnd\\src\\app\\registrazione\\registrazione.component.ts","D:\\codici\\ProgettoWebFrontEnd\\src\\app\\registrazione\\registrazione.component.html"],"sourcesContent":["import {Component, ViewChild} from '@angular/core';\nimport {FormControl, NgForm} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\ndeclare const calculateStrength: (password: string) => number; // Importa la funzione dalla logica JavaScript\ndeclare const initAutocomplete: () => void; // Importa la funzione dalla logica JavaScript\ndeclare const fillInAddress: () => void; // Importa la funzione dalla logica JavaScript\n@Component({\n  selector: 'app-registrazione',\n  templateUrl: './registrazione.component.html',\n  styleUrls: ['./registrazione.component.css']\n})\nexport class RegistrazioneComponent {\n\n\n\n  @ViewChild('registrationForm', { static: false }) registrationForm!: NgForm; // Aggiunta l'inizializzazione\n\n  nome = new FormControl();\n  cognome = new FormControl();\n  username = new FormControl();\n\n  email = new FormControl();\n  data = new FormControl();\n  via = new FormControl();\n  civico = new FormControl();\n  password1 = new FormControl();\n\n  address1Field: HTMLInputElement = new HTMLInputElement();\n  address2Field: HTMLInputElement = new HTMLInputElement();\n  postalField: HTMLInputElement = new HTMLInputElement();\n\n\n  password: string = '';\n  strength: number = 0;\n\n  // Nel tuo componente TypeScript\n  formIsValid = false;\n\n\n\n  passwordLengthValid = false;\n\n  constructor(private router: Router) {}\n\n\n\n  onPasswordChange() {\n    this.strength = calculateStrength(this.password);\n    this.passwordLengthValid = this.password.length >= 8;\n    console.log(this.formIsValid)\n  }\n\n  getStrengthColor() {\n    // Restituisci uno stile CSS in base alla forza della password, ad esempio, un gradiente di colore\n    const color = this.strength < 50 ? 'red' : 'green';\n    return { 'background': `linear-gradient(to right, ${color} ${this.strength}%, #eee ${this.strength}%)` };\n  }\n\n  go(){\n    console.log(\"TEST VEDO SE VA GO\");\n    this.router.navigate(['/']);\n\n  }\n\n  updateFormValidity() {\n    // Controlla se tutti i campi richiesti sono stati toccati\n    if(this.nome.value == null || this.cognome.value == null || this.username.value == null || this.email.value == null || this.data.value == null || this.via.value == null || this.civico.value == null ){\n      this.formIsValid = false;\n    }\n\n    else if (this.nome.value == \"\" || this.cognome.value == \"\" || this.username.value == \"\" || this.email.value == \"\" || this.data.value == \"\" || this.via.value == \"\" || this.civico.value == \"\" ){\n      this.formIsValid = false;\n    }\n\n    else {\n      this.formIsValid = true;\n    }\n    console.log(this.formIsValid);\n  }\n\n  change() {\n    this.updateFormValidity();\n\n  }\n\n\n\n  function initAutocomplete() {\n    address1Field = document.querySelector(\"#ship-address\") as HTMLInputElement;\n    address2Field = document.querySelector(\"#address2\") as HTMLInputElement;\n    postalField = document.querySelector(\"#postcode\") as HTMLInputElement;\n\n    // Create the autocomplete object, restricting the search predictions to\n    // addresses in the US and Canada.\n    autocomplete = new google.maps.places.Autocomplete(address1Field, {\n      componentRestrictions: { country: [\"us\", \"ca\"] },\n      fields: [\"address_components\", \"geometry\"],\n      types: [\"address\"],\n    });\n    address1Field.focus();\n\n    // When the user selects an address from the drop-down, populate the\n    // address fields in the form.\n    autocomplete.addListener(\"place_changed\", fillInAddress);\n  }\n\n\n\n\n\n\n\n}\n","<!-- Nel tuo file HTML -->\n\n<!DOCTYPE html>\n<html lang=\"en\" class=\"app-routing-module-container\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Registrazione</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background-color: #f4f4f4;\n      margin: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100vh;\n    }\n\n    form {\n      background-color: #fff;\n      padding: 20px;\n      border-radius: 8px;\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n      width: 700px; /* Imposta la larghezza desiderata */\n      box-sizing: border-box;\n    }\n\n    label {\n      display: block;\n      margin-bottom: 8px;\n    }\n\n    input {\n      width: 100%;\n      padding: 8px;\n      margin-bottom: 16px;\n      box-sizing: border-box;\n    }\n\n    .strength-meter {\n      height: 20px;\n      margin-bottom: 16px;\n      overflow: hidden;\n      border-radius: 4px;\n      background-color: #f0f0f0;\n    }\n\n    .strength-meter div {\n      height: 100%;\n      color: #fff;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    /* Define different colors based on strength (adjust as needed) */\n    .weak { background-color: #ff6347; }\n    .medium { background-color: #ffa500; }\n    .strong { background-color: #008000; }\n\n    button {\n      background-color: #4caf50;\n      color: white;\n      padding: 10px 15px;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n\n    button:hover {\n      background-color: #45a049;\n    }\n  </style>\n</head>\n<body>\n\n<form (ngSubmit)=\"go()\"  #myForm=\"ngForm\">\n  <h2>Registrati</h2>\n\n  <p class=\"title\">Sample address form for North America</p>\n  <p class=\"note\"><em>* = required field</em></p>\n  <label class=\"full-field\">\n    <!-- Avoid the word \"address\" in id, name, or label text to avoid browser autofill from conflicting with Place Autocomplete. Star or comment bug https://crbug.com/587466 to request Chromium to honor autocomplete=\"off\" attribute. -->\n    <span class=\"form-label\">Deliver to*</span>\n    <input\n      id=\"ship-address\"\n      name=\"ship-address\"\n      required\n      autocomplete=\"off\"\n    />\n  </label>\n\n  <!-- Campi del form -->\n  <label for=\"nome\">Nome:</label>\n  <input type=\"text\" id=\"nome\" name=\"nome\" (input)=\"change()\" required [formControl]=\"nome\">\n\n  <label for=\"cognome\">Cognome:</label>\n  <input type=\"text\" id=\"cognome\" name=\"cognome\" (input)=\"change()\" required [formControl]=\"cognome\">\n\n  <label for=\"data_nascita\">Data di nascita:</label>\n  <input type=\"date\" id=\"data_nascita\" name=\"data_nascita\" (input)=\"change()\" required [formControl]=\"data\">\n\n  <label for=\"indirizzo\">Via:</label>\n  <input type=\"text\" id=\"indirizzo\" name=\"indirizzo\" (input)=\"change()\" required [formControl]=\"via\">\n\n  <label for=\"civico\">Civico:</label>\n  <input type=\"number\" id=\"civico\" name=\"civico\" required (input)=\"change()\" [formControl]=\"civico\">\n\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\"  name=\"username\" required (input)=\"change()\" [formControl]=\"username\">\n\n\n\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\"   name=\"email\" (input)=\"change()\" required [formControl]=\"email\">\n\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" (input)=\"onPasswordChange()\" name=\"password\" required [formControl]=\"password1\">\n\n  <div class=\"strength-meter\">\n    <div [style.width.%]=\"strength\" [ngStyle]=\"getStrengthColor()\">\n      Forza: {{ strength }}%\n    </div>\n\n  </div>\n\n  <button type=\"submit\" [disabled]=\"!formIsValid || !passwordLengthValid\" [ngStyle]=\"{'background-color': (formIsValid && passwordLengthValid) ? '#4caf50' : '#ddd'}\" >Registrati</button>\n  <app-errore-messaggio *ngIf=\"!formIsValid\" [messaggio]=\"'Inserire tutti i campi'\"></app-errore-messaggio>\n  <app-errore-messaggio *ngIf=\"!passwordLengthValid\" [messaggio]=\"'Password non valida'\"></app-errore-messaggio>\n</form>\n\n\n\n\n</body>\n\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}