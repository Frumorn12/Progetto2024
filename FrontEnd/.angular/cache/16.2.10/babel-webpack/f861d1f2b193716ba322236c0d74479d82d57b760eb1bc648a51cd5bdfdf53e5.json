{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth-service.service\";\nimport * as i3 from \"@angular/router\";\nexport class UtenteServiceService {\n  constructor(http, auth, router) {\n    this.http = http;\n    this.auth = auth;\n    this.router = router;\n    this.backendUrl = \"http://localhost:8080\";\n    this.isUser = false;\n    this.type = 0;\n  }\n  // @ts-ignore\n  checkUtente(username) {\n    console.log(\"entrato\");\n    console.log(username);\n    console.log(this.backendUrl + \"/checkUtente/\" + username);\n    this.http.get(this.backendUrl + \"/checkUtente/\" + username).subscribe(isUser => {\n      if (isUser) {\n        this.isUser = true;\n      } else {\n        this.isUser = false;\n      }\n      console.log(isUser);\n    });\n    return this.isUser;\n  }\n  getTipo(username) {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n    };\n    console.log(\"entrato\");\n    console.log(username);\n    console.log(this.backendUrl + \"/checkUtente/\" + username);\n    this.http.get(this.backendUrl + \"/getTipo/\" + username, header).subscribe(type => {\n      this.type = type;\n    });\n    return this.type;\n  }\n  static #_ = this.ɵfac = function UtenteServiceService_Factory(t) {\n    return new (t || UtenteServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthServiceService), i0.ɵɵinject(i3.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UtenteServiceService,\n    factory: UtenteServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","UtenteServiceService","constructor","http","auth","router","backendUrl","isUser","type","checkUtente","username","console","log","get","subscribe","getTipo","header","headers","set","token","_","i0","ɵɵinject","i1","HttpClient","i2","AuthServiceService","i3","Router","_2","factory","ɵfac","providedIn"],"sources":["D:\\codici\\ProgettoWebFrontEnd\\src\\app\\services\\utente-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {AuthServiceService} from \"./auth-service.service\";\nimport {Observable} from \"rxjs\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtenteServiceService {\n  private backendUrl = \"http://localhost:8080\"\n\n  isUser:boolean = false\n  type:number = 0\n\n\n  constructor(private http:HttpClient,private auth:AuthServiceService, private router: Router) {  }\n\n  // @ts-ignore\n  checkUtente(username:string): boolean{\n\n    console.log(\"entrato\")\n    console.log(username)\n    console.log(this.backendUrl+ \"/checkUtente/\" + username)\n    this.http.get<boolean>(this.backendUrl+ \"/checkUtente/\" + username).subscribe(isUser => {\n\n      if(isUser){\n        this.isUser = true\n      }\n      else {\n        this.isUser = false\n      }\n\n      console.log(isUser)\n\n\n\n    })\n    return this.isUser\n\n\n\n  }\n\n  getTipo(username:string): number{\n    var header  = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n    }\n    console.log(\"entrato\")\n    console.log(username)\n    console.log(this.backendUrl+ \"/checkUtente/\" + username)\n    this.http.get<number>(this.backendUrl+ \"/getTipo/\" + username, header).subscribe(type => {\n\n      this.type = type\n\n    })\n    return this.type\n\n  }\n}\n"],"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;;;AAQ5D,OAAM,MAAOC,oBAAoB;EAO/BC,YAAoBC,IAAe,EAASC,IAAuB,EAAUC,MAAc;IAAvE,KAAAF,IAAI,GAAJA,IAAI;IAAoB,KAAAC,IAAI,GAAJA,IAAI;IAA6B,KAAAC,MAAM,GAANA,MAAM;IAN3E,KAAAC,UAAU,GAAG,uBAAuB;IAE5C,KAAAC,MAAM,GAAW,KAAK;IACtB,KAAAC,IAAI,GAAU,CAAC;EAGiF;EAEhG;EACAC,WAAWA,CAACC,QAAe;IAEzBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBD,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,UAAU,GAAE,eAAe,GAAGI,QAAQ,CAAC;IACxD,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,IAAI,CAACP,UAAU,GAAE,eAAe,GAAGI,QAAQ,CAAC,CAACI,SAAS,CAACP,MAAM,IAAG;MAErF,IAAGA,MAAM,EAAC;QACR,IAAI,CAACA,MAAM,GAAG,IAAI;OACnB,MACI;QACH,IAAI,CAACA,MAAM,GAAG,KAAK;;MAGrBI,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;IAIrB,CAAC,CAAC;IACF,OAAO,IAAI,CAACA,MAAM;EAIpB;EAEAQ,OAAOA,CAACL,QAAe;IACrB,IAAIM,MAAM,GAAI;MACZC,OAAO,EAAE,IAAIjB,WAAW,EAAE,CAACkB,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAACd,IAAI,CAACe,KAAK;KAC3E;IACDR,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBD,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,UAAU,GAAE,eAAe,GAAGI,QAAQ,CAAC;IACxD,IAAI,CAACP,IAAI,CAACU,GAAG,CAAS,IAAI,CAACP,UAAU,GAAE,WAAW,GAAGI,QAAQ,EAAEM,MAAM,CAAC,CAACF,SAAS,CAACN,IAAI,IAAG;MAEtF,IAAI,CAACA,IAAI,GAAGA,IAAI;IAElB,CAAC,CAAC;IACF,OAAO,IAAI,CAACA,IAAI;EAElB;EAAC,QAAAY,CAAA,G;qBAjDUnB,oBAAoB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,kBAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApB5B,oBAAoB;IAAA6B,OAAA,EAApB7B,oBAAoB,CAAA8B,IAAA;IAAAC,UAAA,EAFnB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}