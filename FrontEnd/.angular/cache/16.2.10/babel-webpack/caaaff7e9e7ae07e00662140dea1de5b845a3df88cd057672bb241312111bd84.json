{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./services/auth-service.service\";\nexport class RistorantiServiceService {\n  constructor(http, auth) {\n    this.http = http;\n    this.auth = auth;\n    this.backendUrl = \"http://localhost:8080\";\n  }\n  dammiRistorantiMigliori() {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n    };\n    return this.http.get(this.backendUrl + \"/ristorantiMigliori\", header);\n  }\n  static #_ = this.ɵfac = function RistorantiServiceService_Factory(t) {\n    return new (t || RistorantiServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthServiceService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RistorantiServiceService,\n    factory: RistorantiServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","RistorantiServiceService","constructor","http","auth","backendUrl","dammiRistorantiMigliori","header","headers","set","token","get","_","i0","ɵɵinject","i1","HttpClient","i2","AuthServiceService","_2","factory","ɵfac","providedIn"],"sources":["C:\\codici\\web_frontend\\WebApplications_23_24_Ristoranti_Frontend\\src\\app\\ristoranti-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from  '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Ristorante } from './model/ristorante';\r\nimport { AuthServiceService } from './services/auth-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RistorantiServiceService {\r\n  private backendUrl = \"http://localhost:8080\"\r\n\r\n  constructor(private http:HttpClient,private auth:AuthServiceService) {}\r\n  dammiRistorantiMigliori():Observable<Ristorante[]>{\r\n    var header = {\r\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\r\n    }\r\n\r\n    return this.http.get<Ristorante[]>(this.backendUrl + \"/ristorantiMigliori\", \r\n                  header)\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAoBA,WAAW,QAAQ,sBAAsB;;;;AAQ7D,OAAM,MAAOC,wBAAwB;EAGnCC,YAAoBC,IAAe,EAASC,IAAuB;IAA/C,KAAAD,IAAI,GAAJA,IAAI;IAAoB,KAAAC,IAAI,GAAJA,IAAI;IAFxC,KAAAC,UAAU,GAAG,uBAAuB;EAE0B;EACtEC,uBAAuBA,CAAA;IACrB,IAAIC,MAAM,GAAG;MACXC,OAAO,EAAE,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAACL,IAAI,CAACM,KAAK;KAC3E;IAED,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAe,IAAI,CAACN,UAAU,GAAG,qBAAqB,EAC5DE,MAAM,CAAC;EACvB;EAAC,QAAAK,CAAA,G;qBAXUX,wBAAwB,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAxBlB,wBAAwB;IAAAmB,OAAA,EAAxBnB,wBAAwB,CAAAoB,IAAA;IAAAC,UAAA,EAFvB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}