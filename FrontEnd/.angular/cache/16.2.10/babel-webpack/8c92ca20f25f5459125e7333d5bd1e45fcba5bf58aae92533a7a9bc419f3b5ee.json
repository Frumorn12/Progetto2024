{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth-service.service\";\nexport class HamburgerServiceService {\n  constructor(http, auth) {\n    this.http = http;\n    this.auth = auth;\n    this.backendUrl = \"http://localhost:8080\";\n  }\n  dammiBase() {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n    };\n    return this.http.get(this.backendUrl + \"/base\", header);\n  }\n  dammiIngredienti() {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n    };\n    return this.http.get(this.backendUrl + \"/ingredienti\", header);\n  }\n  dammiSalsa() {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n    };\n    return this.http.get(this.backendUrl + \"/salsa\", header);\n  }\n  dammiCarne() {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n    };\n    return this.http.get(this.backendUrl + \"/carne\", header);\n  }\n  addIngrediente(ingrediente) {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n    };\n    return this.http.get(this.backendUrl + \"/addIngrediente/\" + ingrediente?.nome + \"/\" + ingrediente?.prezzo + \"/\" + this.auth.token, header);\n  }\n  getHamburger() {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n    };\n    return this.http.get(this.backendUrl + \"/hamburger\", header);\n  }\n  static #_ = this.ɵfac = function HamburgerServiceService_Factory(t) {\n    return new (t || HamburgerServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthServiceService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HamburgerServiceService,\n    factory: HamburgerServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","HamburgerServiceService","constructor","http","auth","backendUrl","dammiBase","header","headers","set","token","get","dammiIngredienti","dammiSalsa","dammiCarne","addIngrediente","ingrediente","nome","prezzo","getHamburger","_","i0","ɵɵinject","i1","HttpClient","i2","AuthServiceService","_2","factory","ɵfac","providedIn"],"sources":["D:\\codici\\ProgettoWebFrontEnd\\src\\app\\services\\hamburger-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {AuthServiceService} from \"./auth-service.service\";\nimport {Ingrediente} from \"../model/ingrediente\";\nimport {Hamburger} from \"../model/hamburger\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HamburgerServiceService {\n  private backendUrl = \"http://localhost:8080\"\n\n  constructor(private http:HttpClient,private auth:AuthServiceService) { }\n\n  dammiBase(){\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n\n\n    }\n    return this.http.get<Ingrediente[]>(this.backendUrl + \"/base\",header)\n\n  }\n\n  dammiIngredienti(){\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n\n\n    }\n    return this.http.get<Ingrediente[]>(this.backendUrl + \"/ingredienti\",header)\n\n  }\n\n  dammiSalsa(){\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)}\n    return this.http.get<Ingrediente[]>(this.backendUrl + \"/salsa\",header)\n\n\n  }\n\n  dammiCarne(){\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)}\n    return this.http.get<Ingrediente[]>(this.backendUrl + \"/carne\",header)}\n\n\n  addIngrediente(ingrediente: Ingrediente | undefined) {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' +  this.auth.token)\n    }\n    return  this.http.get<boolean>(this.backendUrl +\"/addIngrediente/\"+ingrediente?.nome + \"/\" + ingrediente?.prezzo+ \"/\" + this.auth.token,  header )\n\n  }\n\n  getHamburger() {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' +  this.auth.token)\n    }\n    return this.http.get<Hamburger[]>(this.backendUrl + \"/hamburger\",header)\n\n  }\n}\n"],"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;;AAQ5D,OAAM,MAAOC,uBAAuB;EAGlCC,YAAoBC,IAAe,EAASC,IAAuB;IAA/C,KAAAD,IAAI,GAAJA,IAAI;IAAoB,KAAAC,IAAI,GAAJA,IAAI;IAFxC,KAAAC,UAAU,GAAG,uBAAuB;EAE2B;EAEvEC,SAASA,CAAA;IACP,IAAIC,MAAM,GAAG;MACXC,OAAO,EAAE,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAACL,IAAI,CAACM,KAAK;KAG3E;IACD,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAgB,IAAI,CAACN,UAAU,GAAG,OAAO,EAACE,MAAM,CAAC;EAEvE;EAEAK,gBAAgBA,CAAA;IACd,IAAIL,MAAM,GAAG;MACXC,OAAO,EAAE,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAACL,IAAI,CAACM,KAAK;KAG3E;IACD,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAgB,IAAI,CAACN,UAAU,GAAG,cAAc,EAACE,MAAM,CAAC;EAE9E;EAEAM,UAAUA,CAAA;IACR,IAAIN,MAAM,GAAG;MACXC,OAAO,EAAE,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAACL,IAAI,CAACM,KAAK;KAAE;IAC9E,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAgB,IAAI,CAACN,UAAU,GAAG,QAAQ,EAACE,MAAM,CAAC;EAGxE;EAEAO,UAAUA,CAAA;IACR,IAAIP,MAAM,GAAG;MACXC,OAAO,EAAE,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAACL,IAAI,CAACM,KAAK;KAAE;IAC9E,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAgB,IAAI,CAACN,UAAU,GAAG,QAAQ,EAACE,MAAM,CAAC;EAAA;EAGxEQ,cAAcA,CAACC,WAAoC;IACjD,IAAIT,MAAM,GAAG;MACXC,OAAO,EAAE,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAI,IAAI,CAACL,IAAI,CAACM,KAAK;KAC5E;IACD,OAAQ,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAU,IAAI,CAACN,UAAU,GAAE,kBAAkB,GAACW,WAAW,EAAEC,IAAI,GAAG,GAAG,GAAGD,WAAW,EAAEE,MAAM,GAAE,GAAG,GAAG,IAAI,CAACd,IAAI,CAACM,KAAK,EAAGH,MAAM,CAAE;EAEpJ;EAEAY,YAAYA,CAAA;IACV,IAAIZ,MAAM,GAAG;MACXC,OAAO,EAAE,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAI,IAAI,CAACL,IAAI,CAACM,KAAK;KAC5E;IACD,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAc,IAAI,CAACN,UAAU,GAAG,YAAY,EAACE,MAAM,CAAC;EAE1E;EAAC,QAAAa,CAAA,G;qBArDUnB,uBAAuB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAvB1B,uBAAuB;IAAA2B,OAAA,EAAvB3B,uBAAuB,CAAA4B,IAAA;IAAAC,UAAA,EAFtB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}