{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthServiceService {\n  getToken() {\n    if (this.token == undefined) {\n      this.token = localStorage.getItem(\"ristoranti_token\");\n    }\n    return this.token;\n  }\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem(\"ristoranti_token\", token);\n  }\n  constructor(http) {\n    this.http = http;\n    this.backendUrl = \"http://localhost:8080\";\n  }\n  login(username, password) {\n    var utente = {\n      \"username\": username,\n      \"password\": password\n    };\n    this.http.post(this.backendUrl + \"/login\", utente).subscribe(response => this.setToken(response.token));\n  }\n  static #_ = this.ɵfac = function AuthServiceService_Factory(t) {\n    return new (t || AuthServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthServiceService,\n    factory: AuthServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthServiceService","getToken","token","undefined","localStorage","getItem","setToken","setItem","constructor","http","backendUrl","login","username","password","utente","post","subscribe","response","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\codici\\web_frontend\\WebApplications_23_24_Ristoranti_Frontend\\src\\app\\services\\auth-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthToken, Utente } from '../model/utente';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthServiceService {\r\n  private backendUrl = \"http://localhost:8080\";\r\n  public token?:string | null;\r\n\r\n  getToken(){\r\n    if (this.token == undefined){\r\n      this.token = localStorage.getItem(\"ristoranti_token\");\r\n    }\r\n    return this.token;\r\n  }\r\n\r\n  setToken(token:string){\r\n    this.token = token;\r\n    localStorage.setItem(\"ristoranti_token\", token);\r\n\r\n  }\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  login(username:string, password:string){\r\n    var utente:Utente = {\"username\": username, \"password\": password};\r\n    this.http.post<AuthToken>(this.backendUrl + \"/login\",utente)\r\n    .subscribe(response => this.setToken(response.token));\r\n  }\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,kBAAkB;EAI7BC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACC,KAAK,IAAIC,SAAS,EAAC;MAC1B,IAAI,CAACD,KAAK,GAAGE,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;;IAEvD,OAAO,IAAI,CAACH,KAAK;EACnB;EAEAI,QAAQA,CAACJ,KAAY;IACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClBE,YAAY,CAACG,OAAO,CAAC,kBAAkB,EAAEL,KAAK,CAAC;EAEjD;EAEAM,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAhBhB,KAAAC,UAAU,GAAG,uBAAuB;EAgBL;EAEvCC,KAAKA,CAACC,QAAe,EAAEC,QAAe;IACpC,IAAIC,MAAM,GAAU;MAAC,UAAU,EAAEF,QAAQ;MAAE,UAAU,EAAEC;IAAQ,CAAC;IAChE,IAAI,CAACJ,IAAI,CAACM,IAAI,CAAY,IAAI,CAACL,UAAU,GAAG,QAAQ,EAACI,MAAM,CAAC,CAC3DE,SAAS,CAACC,QAAQ,IAAI,IAAI,CAACX,QAAQ,CAACW,QAAQ,CAACf,KAAK,CAAC,CAAC;EACvD;EAAC,QAAAgB,CAAA,G;qBAvBUlB,kBAAkB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBvB,kBAAkB;IAAAwB,OAAA,EAAlBxB,kBAAkB,CAAAyB,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}