{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth-service.service\";\nexport class UtenteServiceService {\n  constructor(http, auth) {\n    this.http = http;\n    this.auth = auth;\n    this.backendUrl = \"http://localhost:8080\";\n  }\n  checkUtente(username) {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n    };\n    console.log(\"entrato\");\n    console.log(username);\n    console.log(this.backendUrl + \"/checkUtente/\" + username);\n    return this.http.get(this.backendUrl + \"/checkUtente/\" + username, header);\n  }\n  static #_ = this.ɵfac = function UtenteServiceService_Factory(t) {\n    return new (t || UtenteServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthServiceService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UtenteServiceService,\n    factory: UtenteServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","UtenteServiceService","constructor","http","auth","backendUrl","checkUtente","username","header","headers","set","token","console","log","get","_","i0","ɵɵinject","i1","HttpClient","i2","AuthServiceService","_2","factory","ɵfac","providedIn"],"sources":["D:\\codici\\ProgettoWebFrontEnd\\src\\app\\services\\utente-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {AuthServiceService} from \"./auth-service.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtenteServiceService {\n  private backendUrl = \"http://localhost:8080\"\n\n\n  constructor(private http:HttpClient,private auth:AuthServiceService) {  }\n\n  checkUtente(username:string):Observable<boolean>{\n    var header  = {\n      headers: new HttpHeaders().set('Authorization', 'Basic ' + this.auth.token)\n    }\n    console.log(\"entrato\")\n    console.log(username)\n    console.log(this.backendUrl+ \"/checkUtente/\" + username)\n    return this.http.get<boolean>(this.backendUrl+ \"/checkUtente/\" + username, header)\n\n  }\n}\n"],"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;;AAO5D,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,IAAe,EAASC,IAAuB;IAA/C,KAAAD,IAAI,GAAJA,IAAI;IAAoB,KAAAC,IAAI,GAAJA,IAAI;IAHxC,KAAAC,UAAU,GAAG,uBAAuB;EAG4B;EAExEC,WAAWA,CAACC,QAAe;IACzB,IAAIC,MAAM,GAAI;MACZC,OAAO,EAAE,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAACN,IAAI,CAACO,KAAK;KAC3E;IACDC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBD,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACrBK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,UAAU,GAAE,eAAe,GAAGE,QAAQ,CAAC;IACxD,OAAO,IAAI,CAACJ,IAAI,CAACW,GAAG,CAAU,IAAI,CAACT,UAAU,GAAE,eAAe,GAAGE,QAAQ,EAAEC,MAAM,CAAC;EAEpF;EAAC,QAAAO,CAAA,G;qBAfUd,oBAAoB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApBrB,oBAAoB;IAAAsB,OAAA,EAApBtB,oBAAoB,CAAAuB,IAAA;IAAAC,UAAA,EAFnB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}