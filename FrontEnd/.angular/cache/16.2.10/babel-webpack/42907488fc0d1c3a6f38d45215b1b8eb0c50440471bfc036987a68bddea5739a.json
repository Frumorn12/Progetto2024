{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthServiceService {\n  getToken() {\n    if (this.token == undefined) {\n      this.token = localStorage.getItem(\"ristoranti_token\");\n    }\n    return this.token;\n  }\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem(\"ristoranti_token\", token);\n  }\n  removeToken() {\n    this.token = undefined;\n    localStorage.removeItem(\"ristoranti_token\");\n  }\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.backendUrl = \"http://localhost:8080\";\n  }\n  checkAuthentication() {\n    this.http.post(this.backendUrl + \"/isAuthenticated\", {\n      \"Authorization\": \"Basic \" + this.token\n    }, {\n      withCredentials: true\n    }).subscribe(res => {\n      if (!res) {\n        this.removeToken();\n      }\n    });\n  }\n  isAuthenticated() {\n    return this.getToken() != undefined;\n  }\n  login(username, password, tipo) {\n    var utente = {\n      \"username\": username,\n      \"password\": password,\n      \"tipo\": tipo\n    };\n    this.http.post(this.backendUrl + \"/login\", utente, {\n      withCredentials: true\n    }).subscribe(response => {\n      this.setToken(response.token);\n      this.router.navigate([\"/\"]);\n    });\n  }\n  logout() {\n    this.http.post(this.backendUrl + \"/logout\", {\n      \"Authorization\": \"Basic \" + this.token\n    }, {\n      withCredentials: true\n    }).subscribe(res => {\n      if (res) {\n        this.removeToken();\n      }\n      this.router.navigate([\"/\"]);\n    });\n  }\n  static #_ = this.ɵfac = function AuthServiceService_Factory(t) {\n    return new (t || AuthServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthServiceService,\n    factory: AuthServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthServiceService","getToken","token","undefined","localStorage","getItem","setToken","setItem","removeToken","removeItem","constructor","http","router","backendUrl","checkAuthentication","post","withCredentials","subscribe","res","isAuthenticated","login","username","password","tipo","utente","response","navigate","logout","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["D:\\codici\\ProgettoWebFrontEnd\\src\\app\\services\\auth-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthToken, Utente } from '../model/utente';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthServiceService {\r\n  private backendUrl = \"http://localhost:8080\";\r\n  public token?:string | null;\r\n\r\n  getToken(){\r\n    if (this.token == undefined){\r\n      this.token = localStorage.getItem(\"ristoranti_token\");\r\n    }\r\n    return this.token;\r\n  }\r\n\r\n  setToken(token:string){\r\n    this.token = token;\r\n    localStorage.setItem(\"ristoranti_token\", token);\r\n\r\n  }\r\n\r\n  removeToken(){\r\n    this.token = undefined;\r\n    localStorage.removeItem(\"ristoranti_token\");\r\n  }\r\n\r\n  constructor(private http:HttpClient, private router:Router) { }\r\n\r\n  checkAuthentication(){\r\n    this.http.post<AuthToken>(this.backendUrl + \"/isAuthenticated\",\r\n    {\"Authorization\":\"Basic \" + this.token}, {withCredentials: true}).subscribe(\r\n      res => {\r\n        if (!res){\r\n          this.removeToken();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  isAuthenticated(){\r\n    return this.getToken() != undefined;\r\n  }\r\n\r\n  login(username:string, password:string, tipo:number){\r\n    var utente:Utente = {\"username\": username, \"password\": password, \"tipo\": tipo};\r\n    this.http.post<AuthToken>(this.backendUrl + \"/login\",utente,{withCredentials: true})\r\n    .subscribe(response => {\r\n      this.setToken(response.token);\r\n      this.router.navigate([\"/\"]);\r\n    });\r\n  }\r\n  logout(){\r\n\r\n\r\n    this.http.post<AuthToken>(this.backendUrl + \"/logout\",\r\n    {\"Authorization\":\"Basic \" + this.token}, {withCredentials: true}).subscribe(\r\n      res => {\r\n        if (res){\r\n          this.removeToken();\r\n        }\r\n        this.router.navigate([\"/\"]);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":";;;AASA,OAAM,MAAOA,kBAAkB;EAI7BC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACC,KAAK,IAAIC,SAAS,EAAC;MAC1B,IAAI,CAACD,KAAK,GAAGE,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;;IAEvD,OAAO,IAAI,CAACH,KAAK;EACnB;EAEAI,QAAQA,CAACJ,KAAY;IACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClBE,YAAY,CAACG,OAAO,CAAC,kBAAkB,EAAEL,KAAK,CAAC;EAEjD;EAEAM,WAAWA,CAAA;IACT,IAAI,CAACN,KAAK,GAAGC,SAAS;IACtBC,YAAY,CAACK,UAAU,CAAC,kBAAkB,CAAC;EAC7C;EAEAC,YAAoBC,IAAe,EAAUC,MAAa;IAAtC,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,MAAM,GAANA,MAAM;IArB3C,KAAAC,UAAU,GAAG,uBAAuB;EAqBkB;EAE9DC,mBAAmBA,CAAA;IACjB,IAAI,CAACH,IAAI,CAACI,IAAI,CAAY,IAAI,CAACF,UAAU,GAAG,kBAAkB,EAC9D;MAAC,eAAe,EAAC,QAAQ,GAAG,IAAI,CAACX;IAAK,CAAC,EAAE;MAACc,eAAe,EAAE;IAAI,CAAC,CAAC,CAACC,SAAS,CACzEC,GAAG,IAAG;MACJ,IAAI,CAACA,GAAG,EAAC;QACP,IAAI,CAACV,WAAW,EAAE;;IAEtB,CAAC,CACF;EACH;EAEAW,eAAeA,CAAA;IACb,OAAO,IAAI,CAAClB,QAAQ,EAAE,IAAIE,SAAS;EACrC;EAEAiB,KAAKA,CAACC,QAAe,EAAEC,QAAe,EAAEC,IAAW;IACjD,IAAIC,MAAM,GAAU;MAAC,UAAU,EAAEH,QAAQ;MAAE,UAAU,EAAEC,QAAQ;MAAE,MAAM,EAAEC;IAAI,CAAC;IAC9E,IAAI,CAACZ,IAAI,CAACI,IAAI,CAAY,IAAI,CAACF,UAAU,GAAG,QAAQ,EAACW,MAAM,EAAC;MAACR,eAAe,EAAE;IAAI,CAAC,CAAC,CACnFC,SAAS,CAACQ,QAAQ,IAAG;MACpB,IAAI,CAACnB,QAAQ,CAACmB,QAAQ,CAACvB,KAAK,CAAC;MAC7B,IAAI,CAACU,MAAM,CAACc,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC;EACJ;EACAC,MAAMA,CAAA;IAGJ,IAAI,CAAChB,IAAI,CAACI,IAAI,CAAY,IAAI,CAACF,UAAU,GAAG,SAAS,EACrD;MAAC,eAAe,EAAC,QAAQ,GAAG,IAAI,CAACX;IAAK,CAAC,EAAE;MAACc,eAAe,EAAE;IAAI,CAAC,CAAC,CAACC,SAAS,CACzEC,GAAG,IAAG;MACJ,IAAIA,GAAG,EAAC;QACN,IAAI,CAACV,WAAW,EAAE;;MAEpB,IAAI,CAACI,MAAM,CAACc,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CACF;EACH;EAAC,QAAAE,CAAA,G;qBA3DU5B,kBAAkB,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBnC,kBAAkB;IAAAoC,OAAA,EAAlBpC,kBAAkB,CAAAqC,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}